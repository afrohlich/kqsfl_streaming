services:
  web-server:
    image: caddy:latest
    container_name: web-server
    restart: unless-stopped
    ports:
      - "127.0.0.1:80:80"
      - "443:443"
    volumes:
      - ./web-server/conf/:/etc/caddy/
      - ./web-server/site:/srv
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - streaming_network
    extra_hosts:
      - "host.docker.internal:172.20.0.1"
    env_file:
      - ./web-server/web-server.env
  restreamer:
    image: datarhei/restreamer:latest
    container_name: restreamer
    restart: unless-stopped
    ports:
      - "172.20.0.1:8080:8080"     # Restreamer web UI
      - "172.20.0.1:8181:8181"     # Restreamer API
      - "172.20.0.1:1935:1935"     # RTMP input/output (live streaming)
      - "172.20.0.1:1936:1936"     # RTMP stats/management or alternative RTMP port
      - "172.20.0.1:6000:6000/udp" # RTP/UDP streaming (for media transport)
    volumes:
      - ./restreamer/config:/core/config
      - ./restreamer/data:/core/data
    environment:
      - RS_USERNAME=admin
      - RS_PASSWORD=changeme
    networks:
      - streaming_network
    extra_hosts:
      - "host.docker.internal:172.20.0.1"

  dns-server:
    image: jpillora/dnsmasq:latest
    container_name: dns-server
    restart: unless-stopped
    ports:
      - "127.0.0.1:53:53/udp"
      - "127.0.0.1:53:53/tcp"
      - "172.20.0.1:53:53/udp"
      - "172.20.0.1:53:53/tcp"
      - "172.20.0.1:5380:8080"
    volumes:
      - ./dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf
    cap_add:
      - NET_ADMIN
    networks:
      - streaming_network

  olivetin:
    # https://docs.olivetin.app/install-compose.html
    image: jamesread/olivetin

    container_name: olivetin
    volumes:
      - ./olivetin/config:/config
    expose:
      - "172.20.0.1:1337:1337"
    restart: unless-stopped
    networks:
      - streaming_network
    extra_hosts:
      - "host.docker.internal:172.20.0.1"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "172.20.0.1:3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/conf/provisioning:/etc/grafana/provisioning
      #- ./grafana/conf/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=changeme
      - GF_INSTALL_PLUGINS=
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SERVER_ROOT_URL=/metrics
    networks:
      - streaming_network
    extra_hosts:
      - "host.docker.internal:172.20.0.1"

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    ports:
      - "172.20.0.1:3100:3100"
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/config.yaml
    networks:
      - streaming_network
    extra_hosts:
      - "host.docker.internal:172.20.0.1"

  alloy:
    image: grafana/alloy:v1.7.5
    container_name: alloy
    ports:
      - "172.20.0.1:12345:12345"
      - "172.20.0.1:4317:4317"
      - "172.20.0.1:4318:4318"
    volumes:
      - ./alloy/:/etc/alloy/
      - /var/run/docker.sock:/var/run/docker.sock
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config
    depends_on:
      - loki
    networks:
      - streaming_network
    extra_hosts:
      - "host.docker.internal:172.20.0.1"

  influxdb:
    image: influxdb:latest
    container_name: influxdb2
    ports:
      - "172.20.0.1:8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2 # Mount a named volume for data persistence
    env_file:
      - ./influxdb/influxdb.env

    restart: unless-stopped

  glances:
    image: nicolargo/glances:latest-full
    container_name: glances
    ports:
      - 172.20.0.1:61208:61208/tcp
      - 172.20.0.1:61209:61209/tcp
    environment:
      - GLANCES_OPT="-w"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  lldap:
    image: lldap/lldap:stable
    ports:
      # For LDAP, not recommended to expose, see Usage section.
      #- "3890:3890"
      # For LDAPS (LDAP Over SSL), enable port if LLDAP_LDAPS_OPTIONS__ENABLED set true, look env below
      #- "6360:6360"
      # For the web front-end
      - "172.20.0.1:17170:17170"
    volumes:
      - "lldap_data:/data"
      # Alternatively, you can mount a local folder
      # - "./lldap_data:/data"
    environment:
      - UID=####
      - GID=####
      - TZ=####/####
      - LLDAP_JWT_SECRET=REPLACE_WITH_RANDOM
      - LLDAP_KEY_SEED=REPLACE_WITH_RANDOM
      - LLDAP_LDAP_BASE_DN=dc=example,dc=com
      - LLDAP_LDAP_USER_PASS=adminPas5word
      # If using LDAPS, set enabled true and configure cert and key path
      # - LLDAP_LDAPS_OPTIONS__ENABLED=true
      # - LLDAP_LDAPS_OPTIONS__CERT_FILE=/path/to/certfile.crt
      # - LLDAP_LDAPS_OPTIONS__KEY_FILE=/path/to/keyfile.key
      # You can also set a different database:
      # - LLDAP_DATABASE_URL=mysql://mysql-user:password@mysql-server/my-database
      # - LLDAP_DATABASE_URL=postgres://postgres-user:password@postgres-server/my-database
      # If using SMTP, set the following variables
      # - LLDAP_SMTP_OPTIONS__ENABLE_PASSWORD_RESET=true
      # - LLDAP_SMTP_OPTIONS__SERVER=smtp.example.com
      # - LLDAP_SMTP_OPTIONS__PORT=465 # Check your smtp provider's documentation for this setting
      # - LLDAP_SMTP_OPTIONS__SMTP_ENCRYPTION=TLS # How the connection is encrypted, either "NONE" (no encryption, port 25), "TLS" (sometimes called SSL, port 465) or "STARTTLS" (sometimes called TLS, port 587).
      # - LLDAP_SMTP_OPTIONS__USER=no-reply@example.com # The SMTP user, usually your email address
      # - LLDAP_SMTP_OPTIONS__PASSWORD=PasswordGoesHere # The SMTP password
      # - LLDAP_SMTP_OPTIONS__FROM=no-reply <no-reply@example.com> # The header field, optional: how the sender appears in the email. The first is a free-form name, followed by an email between <>.
      # - LLDAP_SMTP_OPTIONS__TO=admin <admin@example.com> # Same for reply-to, optional.

    networks:
      - streaming_network
    extra_hosts:
      - "host.docker.internal:172.20.0.1"

networks:
  streaming_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24      # Subnet range
          gateway: 172.20.0.1        # Gateway IP
          ip_range: 172.20.0.0/24    # Available IP range
volumes:
  lldap_data:
  grafana_data:
  loki_data:
  influxdb_data: # Define the named volume
  caddy_data:
  caddy_config:
