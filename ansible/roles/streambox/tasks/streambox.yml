- name: streambox configure essential users
  tags: streambox create_users
  block:
    - name: streambox create admin user
      ansible.builtin.user:
        name: streambox-admin
        # home: /home/streambox-admin/
        # create_home: true
        shell: /bin/bash
        groups: video,render
        append: yes

    - name: streambox create admin user systemd directory
      # https://wiki.archlinux.org/title/Systemd/User
      ansible.builtin.file:
        path: "/home/streambox-admin/.config/systemd/user/"
        state: directory
        owner: stream-admin

- name: streambox create keyring dir
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
        
- name: streambox install basic management tools
  tags: install_basics
  block:
    - name: streambox install networking tools
      ansible.builtin.apt:
        pkg:
          - vim
          - screen
          - tmux
          - inotify-tools
          - dbus-x11
          - net-tools
        update_cache: true

- name: streambox configure hypervisor
  block:
    - name: streambox install vm management tools
      ansible.builtin.apt:
        pkg:
          - bridge-utils
          - cpu-checker
          - libvirt-clients
          - libvirt-daemon-system
          - qemu-kvm
          - virt-manager

    - name: create vm data directories
      block:
        - name: create vm configs directory
          ansible.builtin.file:
            path: /usr/local/share/vm-configs
            state: directory

        - name: create vm isos directory
          ansible.builtin.file:
            path: /usr/local/share/vm-configs/isos
            state: directory
        
        - name: create vm templates directory
          ansible.builtin.file:
            path: /usr/local/share/vm-configs/templates
            state: directory

- name: streambox build and start obs vm
  block:
    - name: copy obs server configs
      copy:
        src: {{item}}
        dest: /usr/local/share/vm-configs/templates/obs-server/
      loop:
        - "user-data"
        - "vm.xml"

    - name: streambox open cloud-init web server port
      ansible.builtin.shell:
        chdir: /usr/local/share/vm-configs/templates/obs-server/
        cmd: python3 -m http.server 3003

    - name: streambox serve cloud-init files over http
      ansible.builtin.shell:
        chdir: /usr/local/share/vm-configs/templates/obs-server/
        cmd: python3 -m http.server 3003

    - name: streambox add static ip for vm mac address
      ansible.builtin.shell: |    
        virsh net-update default modify ip-dhcp-host --xml '<host mac="52:54:00:05:05:52" name="obs" ip="192.168.122.101"/>'   --parent-index 0 

    - name: streambox install obs server
      ansible.builtin.shell: |
        virt-install  --name=obs --description='OBS Server' \
        --vcpus=2 --ram=4096 \
        --disk path=/var/lib/libvirt/images/obs/obs.qcow2,size=32 \
        --location '/mnt/data/isos/ubuntu-24.04.2-live-server-amd64.iso',initrd=casper/initrd,kernel=casper/vmlinuz \
        --extra-args="ip=dhcp autoinstall ds=nocloud-net;s=http://192.168.122.1:3003/" \
        --network default,mac=52:54:00:05:05:52 \
        --destroy-on-exit --autostart

    - name: streambox set static ip for vm
      ansible.builtin.shell: |
        virt-xml obs --edit --memorybacking source.type=memfd,access.mode=shared,

    - name: streambox configure filesystem passthrough
      ansible.builtin.shell: |
        virt-xml obs --add-device --filesystem accessmode=passthrough,driver.type=virtiofs,driver.queue=1024,source.dir=/var/opt/obs-server/,target.dir=obs_data,type=mount

- name: install docker
  tags: install_docker
  block:
    - name: streambox install required system packages
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-setuptools
          - python3-pip
          - python3.8-venv
        state: latest
        update_cache: true

    - name: streambox add an apt signing key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: streambox add docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: streambox update apt and install docker-ce
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: true

    - name: streambox install docker module for python
      pip:
        name: docker

    - name: streambox docker allow admin user
      ansible.builtin.user:
        name: stream-admin
        groups: docker
        append: yes

- name: streambox primary docker compose
  tags: docker-compose
  block:
    - name: copy streambox docker compose configurations
      ansible.builtin.copy:
        src: streambox-docker/
        dest: /etc/docker/compose/streambox

    - name: start streambox docker cluster
      community.docker.docker_compose_v2:
        project_src: /etc/docker/compose/streambox/
        build: always
      environment:
        KASM_VNC_PASSWORD: "{{streambox_vnc_password}}"

- name: streambox remote access
  block:
    - name: steambox remote tty setup
      # https://github.com/tsl0922/ttyd
      block:
        - name: ttyd install
          ansible.builtin.snap:
            name: ttyd
            classic: true

        - name: ttyd systemd service install
          ansible.builtin.template:
            src: ttyd_systemd_root_service.j2
            dest: /etc/systemd/system/ttyd.service

        - name: ttyd systemd service enable
          ansible.builtin.systemd:
            name: ttyd.service
            enabled: true
            daemon_reload: true
            state: restarted