- name: streambox configure essential users
  tags: streambox create_users
  block:
    - name: streambox create admin user
      ansible.builtin.user:
        name: stream-admin
        home: /home/stream-admin/
        create_home: true
        shell: /bin/bash
        groups: video,render
        append: yes

    - name: streambox create admin user systemd directory
      # https://wiki.archlinux.org/title/Systemd/User
      ansible.builtin.file:
        path: "/home/stream-admin/.config/systemd/user/"
        state: directory
        owner: stream-admin

- name: streambox create keyring dir
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
        
- name: streambox install basic management tools
  tags: install_basics
  block:
    - name: streambox install networking tools
      ansible.builtin.apt:
        pkg:
          - vim
          - screen
          - tmux
          - inotify-tools
          - dbus-x11
          - net-tools
        update_cache: true

- name: streambox configure hypervisor
  block:
    - name: streambox install vm management tools
      ansible.builtin.apt:
        pkg:
          - bridge-utils
          - cpu-checker
          - libvirt-clients
          - libvirt-daemon-system
          - qemu-kvm
          - virt-manager
          - cloud-image-utils
          - virtiofsd

    - name: create vm data directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      loop:
        - /usr/local/share/vm-configs
        - /usr/local/share/vm-configs/isos
        - /usr/local/share/vm-configs/templates
        - /usr/local/share/vm-configs/templates/obs-server
        - /var/lib/libvirt/images/obs
        - /var/opt/obs-server/


- name: streambox build and start obs vm
  block:
    - name: copy obs server configs
      template:
        src: "{{item}}.j2"
        dest: /usr/local/share/vm-configs/templates/obs-server/{{item}}
      loop:
        - user-data
        - meta-data

    - name: streambox get ubuntu checksumfile
      get_url:
        # Multiple checksums in one file - https://github.com/ansible/ansible/issues/48790
        url: https://releases.ubuntu.com/24.04.3/SHA256SUMS
        dest: /usr/local/share/vm-configs/isos/ubuntu-iso-checksums

    - name: download base os for obs-server vm
      get_url:
        url: https://releases.ubuntu.com/noble/ubuntu-24.04.3-live-server-amd64.iso
        dest: /usr/local/share/vm-configs/isos/ubuntu-24.04.iso
        checksum: 'sha256sum:{{ ubuntu_checksums[0].split()[0] }}'
      vars:
        ubuntu_checksums: '{{ lookup("file", "/usr/local/share/vm-configs/isos/ubuntu-iso-checksums").splitlines() | select("match", ".*ubuntu-24.04.3-live-server-amd64.iso$") | list }}'
      when: streambox_refresh_vm_isos

    - name: streambox serve cloud-init files over http
      ansible.builtin.shell:
        chdir: /usr/local/share/vm-configs/templates/obs-server/
        cmd: |
          nohup python3 -m http.server 3003 >/dev/null 2>&1 &
          echo $!
      args:
        chdir: "{{ http_root }}"
      register: http_pid
      changed_when: http_pid.stdout | length > 0

    - name: streambox add static ip for vm mac address
      ansible.builtin.shell: |
        mac='52:54:00:05:05:52'
        host_defined=$(virsh net-dumpxml default --xpath "/network/ip/dhcp/host[@mac='$mac']" | grep host | wc -l)
        if [ $host_defined -eq 1 ] ; then
          virsh net-update default modify ip-dhcp-host --xml "<host mac='$mac' name='obs' ip='192.168.122.101'/>"   --parent-index 0
        elif [ $host_defined -eq 0 ] ; then
          virsh net-update default add ip-dhcp-host --xml "<host mac='$mac' name='obs' ip='192.168.122.101'/>"   --parent-index 0
        else
          echo "host defined $host_defined times" && exit 1
        fi 

    - name: streambox install obs server
      ansible.builtin.shell: |
        virt-install --wait 7 --name=obs --description='OBS Server' \
        --vcpus=2 --ram=4096 \
        --disk path=/var/lib/libvirt/images/obs/obs.qcow2,size=32 \
        --location '/usr/local/share/vm-configs/isos/ubuntu-24.04.iso',initrd=casper/initrd,kernel=casper/vmlinuz \
        --extra-args="ip=dhcp autoinstall ds=nocloud-net;s=http://192.168.122.1:3003/" \
        --network default,mac=52:54:00:05:05:52 \
        --destroy-on-exit --autostart
      

      # The autoinstall process can be difficult to monitor
      # The vm display can be attached to at 5900
      # The ansible manager use ssh -L 5900:localhost:5900 stream-admin@streambox.lan
      # Then connect using remote desktop viewer via the SPICE protocol on localhost:5900

    - name: streambox set static ip for vm
      ansible.builtin.shell: |
        virt-xml obs --edit --memorybacking source.type=memfd,access.mode=shared,

    - name: streambox configure filesystem passthrough
      ansible.builtin.shell: |
        virt-xml obs --add-device --filesystem accessmode=passthrough,driver.type=virtiofs,driver.queue=1024,source.dir=/var/opt/obs-server/,target.dir=obs_data,type=mount

    - name: streambox create vm snapshot from stopped vm
      ansible.builtin.shell: |
        virsh snapshot-create-as --domain obs --name 'inital install'
    
    - name: streambox start obs vm
      ansible.builtin.shell:
        cmd: virsh start obs

  always:
    - name: kill cloud data http.server
      ansible.builtin.shell: "kill {{ http_pid.stdout | trim }}"
      when: http_pid is defined and (http_pid.stdout | default('')) | length > 0
      ignore_errors: true

- name: install docker
  tags: install_docker
  block:
    - name: streambox install required system packages
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-setuptools
          - python3-pip
        state: latest
        update_cache: true

    - name: streambox add an apt signing key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: streambox add docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: streambox update apt and install docker-ce
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: true

    - name: streambox docker allow admin user
      ansible.builtin.user:
        name: stream-admin
        groups: docker
        append: yes

- name: streambox primary docker compose
  tags: docker-compose
  block:
    - name: copy streambox docker compose configurations
      ansible.builtin.copy:
        src: streambox-docker/
        dest: /etc/docker/compose/streambox

    - name: streambox build and download docker images
      community.docker.docker_compose_v2_pull:
        project_src: /etc/docker/compose/streambox/

    - name: start streambox docker cluster
      community.docker.docker_compose_v2:
        project_src: /etc/docker/compose/streambox/
        build: always
      environment:
        KASM_VNC_PASSWORD: "{{streambox_vnc_password}}"

- name: streambox remote access
  block:
    - name: steambox remote tty setup
      # https://github.com/tsl0922/ttyd
      block:
        - name: ttyd install
          ansible.builtin.snap:
            name: ttyd
            classic: true

        - name: ttyd systemd service install
          ansible.builtin.template:
            src: ttyd_systemd_root_service.j2
            dest: /etc/systemd/system/ttyd.service

        - name: ttyd systemd service enable
          ansible.builtin.systemd:
            name: ttyd.service
            enabled: true
            daemon_reload: true
            state: restarted