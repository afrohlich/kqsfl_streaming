---
- name: configure streambox server
  hosts: streamboxes
  become: yes
  become_user: root
  vars:
    streambox_user: "{{streambox_admin_user}}"
  vars_files:
    - "{{ lookup('env', 'HOME') }}/streambox_vars.yml"
    - "{{ lookup('env', 'HOME') }}/streambox_credentials.yml"
  roles:
    - name: streambox

- name: configure obs server
  hosts: obs_servers
  become: yes
  become_user: root
  vars_files:
    - "{{ lookup('env', 'HOME') }}/streambox_vars.yml"
    - "{{ lookup('env', 'HOME') }}/streambox_credentials.yml"
  vars:
    obsserver_user: "{{streambox_admin_user}}"

  pre_tasks:
    - name: wait for vms
      ansible.builtin.wait_for_connection:
        delay: 10
        timeout: 120

  roles:
    - name: single-user-kiosk
      vars:
        #single_user_kiosk_hostname: obs-server
        single_user_kiosk_primary_user: "{{obsserver_user}}"
    - name: kasmvnc
      vars:
        kasmvnc_user: "{{obsserver_user}}"
        kasmvnc_password: "{{obsserver_vnc_password}}"
        kasmvnc_kiosk_mode: true
        kasmvnc_uri_prefix: "obs-vnc"
    - name: obs-server

  post_tasks:
    - name: remove temporary sudoers file
      file:
        path: /etc/sudoers.d/ansible-init
        state: absent

    - name: streambox create snapshot of obs-server vm
      delegate_to: streambox01
      when: streambox_obs_virtualized not defined or streambox_obs_virtualized
      block:
      - name: streambox stop obs vm
        ansible.builtin.command:
          cmd: virsh destroy obs

      - name: streambox take snapshot
        ansible.builtin.command:
          cmd: |
            virsh snapshot-create-as --domain obs obs-server-snapshot-{{ ansible_date_time.iso8601_basic_short }} --description "Automated snapshot from Ansible - {{ ansible_date_time.iso8601_basic_short }}"

      - name: streambox start obs vm
        ansible.builtin.command:
          cmd: virsh start obs
 
      ignore_errors: yes

    - name: reboot
      ansible.builtin.reboot:
        reboot_timeout: 300
