---
- name: configure streambox server
  hosts: localhost
  # run locally using the following command
  # ansible-playbook -K -u "$USER" -c local streambox.yml
  connection: local
  become: yes
  become_user: root

  tasks:
    - name: test
      command: whoami

    - name: install docker
      block:
        - name: install required system packages
          apt:
            pkg:
              - apt-transport-https
              - ca-certificates
              - curl
              - software-properties-common
              - python3-pip
              - virtualenv
              - python3-setuptools
            state: latest
            update_cache: true

        - name: Add an Apt signing key, uses whichever key is at the URL
          ansible.builtin.apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: add docker repository
          apt_repository:
            repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
            state: present

        - name: update apt and install docker-ce
          apt:
            name: docker-ce
            state: latest
            update_cache: true

        - name: install docker module for python
          pip:
            name: docker

    - name: configure google drive sync
      block:
        - name: install rclone
          ansible.builtin.include_role:
            name: stefangweichinger.ansible_rclone
          vars:
            rclone_version: "1.68.1"
            # Versions listed at https://github.com/rclone/rclone/releases

        - name: create mount point
          file:
            path: /opt/kqsfl-stream/local-recording-backups
            state: directory  

        - name: configure rclone with GDrive mount
          ansible.builtin.include_role:
            name: stefangweichinger.ansible_rclone
          vars:
            rclone_configs:
              - name: google-drive
                properties:
                  type: drive
                  token: 
                  client_id: 
                  client_secret:
          when: false # Temporarily disabling until credentials are available for testing

        - name: Restart rclone
          ansible.builtin.systemd:
            name: rclone.service
            state: restarted
          when: setup_rclone_config.changed

    - name: install obs studio
      # https://obsproject.com/kb/linux-installation
      block:
        - name: obs studio add apt repo
          ansible.builtin.apt_repository:
            repo: ppa:obsproject/obs-studio

        - name: obs studio install
          ansible.builtin.apt:
            update_cache: yes
            name: "obs-studio=30.2.3-0obsproject1~{{ ansible_distribution_release }}"
            # versions: https://launchpad.net/~obsproject/+archive/ubuntu/obs-studio

    - name: install restreamer
      block:
      - name: install restreamer
        community.docker.docker_image:
          name: "datarhei/restreamer"
          tag: "latest"
          source: pull

      - name: configure and start restreamer
        debug: msg='configure restreamer'

    - name: install reverse proxy tunnel for external access
      block:
        # https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/get-started/create-remote-tunnel/
        
        - name: get cloudflare repo apt key
          ansible.builtin.apt_key:
            url: https://pkg.cloudflare.com/cloudflare-main.gpg 
            state: present

        - name: cloudflared add apt repo
          ansible.builtin.apt_repository:
            repo: "deb https://pkg.cloudflare.com/cloudflared {{ansible_distribution_release}} main"
